{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","App.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","data","payload","id","uuidv4","name","number","deleteContact","changeFilter","items","createReducer","actions","state","filter","item","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","persistedReducer","persistReducer","contactsReducer","store","configureStore","reducer","contacts","devTools","process","persistor","persistStore","ContactList","onDeleteContacts","className","styles","list","map","contact","list_item","type","onClick","list_button","defaultProps","onDeleteContact","connect","lowerCaseFilter","toLowerCase","includes","dispatch","text","contactsActions","ContactForm","handelNameChange","event","setState","target","value","handleSubmit","preventDefault","props","find","alert","onSubmit","resetForm","this","form","label","pattern","title","required","onChange","input","button","Component","e","children","div","length","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.af772759.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"list_item\":\"ContactList_list_item__3uTNX\",\"list_button\":\"ContactList_list_button__3NhD0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"App_div__21psy\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n// import types from './contacts-types';\n\n// const addContact = data => ({\n//   type: types.ADD,\n//   payload: {\n//     id: uuidv4(),\n//     name: data.name,\n//     number: data.number,\n//   },\n// });\n\n// const deleteContact = contactId => ({\n//   type: types.DELETE,\n//   payload: contactId,\n// });\n\n// const changeFilter = value => ({\n//   type: types.CHANGE_FILTER,\n//   payload: value,\n// });\n\nconst addContact = createAction('contacts/add', data => {\n  return {\n    payload: {\n      id: uuidv4(),\n      name: data.name,\n      number: data.number,\n    },\n  };\n});\n\nconst deleteContact = createAction('contacts/delete');\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default { addContact, deleteContact, changeFilter };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\n// import types from './contacts-types';\nimport actions from './contacts-actions';\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       return [...state, payload];\n\n//     case types.DELETE:\n//       return state.filter(item => item.id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(item => item.id !== payload),\n});\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case types.CHANGE_FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","// import { combineReducers } from 'redux';\nimport contactsReducer from '../redux/contacts/contacts-reducer';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst persistedReducer = persistReducer(contactsPersistConfig, contactsReducer);\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistedReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import styles from './ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nconst ContactList = ({ contacts, onDeleteContacts }) => (\n  <ul className={styles.list}>\n    {contacts.map(contact => (\n      <li key={contact.id} className={styles.list_item}>\n        <span>{contact.name}: </span>\n        <span>{contact.number}</span>\n        <button\n          type=\"button\"\n          onClick={() => onDeleteContacts(contact.id)}\n          className={styles.list_button}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nconst mapStateToProps = state => {\n  const { items, filter } = state.contacts;\n  const lowerCaseFilter = filter.toLowerCase();\n  return {\n    contacts: items.filter(item => {\n      return item.name.toLowerCase().includes(lowerCaseFilter);\n    }),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContacts: text => dispatch(contactsActions.deleteContact(text)),\n});\n\nContactList.defaultProps = {\n  contacts: [],\n  onDeleteContact: () => {},\n};\n\nContactList.propTypes = {\n  onDeleteContacts: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handelNameChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name } = this.state;\n    const isNameExist = this.props.items.find(item => item.name === name);\n    if (isNameExist) {\n      alert(`${name} is already in contacts`);\n    } else {\n      this.props.onSubmit(this.state);\n    }\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label className={styles.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handelNameChange}\n            className={styles.input}\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            // pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            // title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            // required\n            value={this.state.number}\n            onChange={this.handelNameChange}\n            className={styles.input}\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  items: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: text => dispatch(contactsActions.addContact(text)),\n});\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nconst Filter = ({ filter, items, onChange, children }) => {\n  return (\n    <div className={styles.div}>\n      {items.length > 0 && (\n        <label className={styles.label}>\n          Find contact by name\n          <input\n            type=\"text\"\n            value={filter}\n            onChange={onChange}\n            className={styles.input}\n          ></input>\n        </label>\n      )}\n      {children}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  items: state.contacts.items,\n  filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsActions.changeFilter(e.target.value)),\n});\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\nimport ContactList from './components/ContactList/ContactList';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport styles from './App.module.css';\n\nimport 'normalize.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={styles.div}>\n        <h2>Phonebook</h2>\n        <ContactForm />\n\n        <Filter>\n          <h2>Contact</h2>\n        </Filter>\n\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};"],"sourceRoot":""}